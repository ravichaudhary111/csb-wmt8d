{"version":3,"sources":["App.js","index.js"],"names":["App","useState","flag","setFlag","className","id","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gLAEe,SAASA,IACtB,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKC,UAAU,MAAf,UACGF,EACC,mBAAGG,GAAG,OAAN,8FAIE,KACJ,wBAAQA,GAAG,QAAQC,QAAS,kBAAMH,GAAQ,IAA1C,sBCPN,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACX,EAAD,MAEFO,I","file":"static/js/main.b2b907c1.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\nexport default function App() {\n  const [flag, setFlag] = useState(false);\n  return (\n    <div className=\"App\">\n      {flag ? (\n        <p id=\"para\">\n          Hello, I've learnt to use the full-stack evaluation tool. This makes\n          me so happy\n        </p>\n      ) : null}\n      <button id=\"click\" onClick={() => setFlag(true)}>\n        Click\n      </button>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}